Selectors:

LIKE HOVER

//On click the thing clicked
:active

//Focus:
Use this for when a use tabs on item or select it with click
:focus

//This for only tab
button:focus-visible {
	outline: 1px solid black;
}

//This for a child element focus
:focus-within .helper {
  display: block;
}

//This to only have on tab
button:focus {
	outline: none;
}

button:focus-visible {
	outline: 2px dashed blue;
  outline-offset: 2px;
}

//For visited links
a:link {
  color: blue;
}
a:visited {
  color: black;
}

//Disabled enabled buttons:
button:disabled {
button:enabled

//Checkboxes
:checked

//Number Value with min and max att set
:in-range

//NICE TO KNOW
:first-child
:last-child
:only-child

//First type of div in .my-parent
.my-parent div:first-of-type {
	color: red;
}

//NICE ONE
:empty
----------------------


p::first-letter {
  color: goldenrod;
  font-weight: bold;
}

p::first-line {
  color: goldenrod;
  font-weight: bold;
}


article p:first-of-type {
  color: red;
  font-size: 1.5em;
}



IMP ---  Data types are cool
[data-type='primary'] {
  color: red;
}

Instead of looking for a specific value of data-type, you can also look for elements with the attribute present, regardless of its value.
[data-type] {
  color: red;
}


Group Selectors:
em,
.my-class,
[lang] {
  color: red;
}

p:nth-child(even) {
  background: floralwhite;
}

p:nth-of-type(even) {
  background: floralwhite;
}

div:not(.my-class) {
  color: red;
}

Attribute Selector
[href='#'] {
  color: red;
}

Article then all children, then a: So: all a's that are children of article.
article * a {
  margin-top: 1.5em;
}

This will only select children of article of type a
article > a {
  color: maroon;
}

This will affect all children and all other children in article
article a {
  color: maroon;
}

Selects all elements with class 'my-class' & are type <a>
a.my-class {
  color: red;
}

Inheritance:

Unset sets back to default.
  all: unset;
  color: unset;

